@import 'actions/action-inventory.cocoascript'
@import 'actions/view-inventory.cocoascript'

var methodStartTime = nil

var pluginPath = ""
var pluginVersion = ""
var currentDocument = nil
var currentSelection = nil



var currentCommandIdentifier = -1

var runReplicateLayersIdentifier = 0
var runGenerateStatesIdentifier = 1
var runSimulateKeynoteIdentifier = 2
var runSettingsIdentifier = 3
var runRemoveExportPageIdentifier = 4
var runShowProjectFolderIdentifier = 5
var runSelectProjectFolderIdentifier = 6
var runRemoveProjectFolderIdentifier = 7
var runShowBarIdentifier = 8
var runCheckUpdatesIdentifier = 9

var runTestingEnvironmentIdentifier = -2
var isTestingEnvironment = false
var preTestingDefaults = {}



var showLog = true
var showTestLog = true
var sendLog = true

var isSmartAction = false

var decomposeContext = function(context) {
		// log("inside decomposition")
		pluginVersion = context.plugin.version()
		pluginPath = context.scriptPath.substring(0, context.scriptPath.lastIndexOf("/"))

		currentDocument = context.document
		currentSelection = context.document.selectedLayers().layers()
		// log("currentSelection: " + currentSelection.className())
		// log(currentSelection)
		// log("outside decomposition")
}

var onReplicateLayersRun = function(context) {
	if (showLog) { log("Running Replicate Layers") }
	decomposeContext(context)
	chooseAction(currentDocument, currentSelection, runReplicateLayersIdentifier)
}

var onGenerateStatesRun = function(context) {
	if (showLog) { log("Running Generate States") }
	decomposeContext(context)
	chooseAction(currentDocument, currentSelection, runGenerateStatesIdentifier)
}

var onSimulateKeynoteRun = function(context) {
	if (showLog) { log("Running Simulate Keynote") }
	decomposeContext(context)
	chooseAction(currentDocument, currentSelection, runSimulateKeynoteIdentifier)
}

var onSettingRun = function(context) {
	if (showLog) { log("Running Settings") }
	decomposeContext(context)
	chooseAction(currentDocument, currentSelection, runSettingsIdentifier)
}

var onRemoveExportPageRun = function(context) {
	if (showLog) { log("Running Remove Export Page...") }
	decomposeContext(context)
	chooseAction(currentDocument, currentSelection, runRemoveExportPageIdentifier)
}

var onShowBarRun = function(context) {
	if (showLog) { log("Showing Bar") }
	decomposeContext(context)
	chooseAction(currentDocument, currentSelection, runShowBarIdentifier)
}

var onSelectProjectFolderRun = function(context) {
	if (showLog) { log("Running Select Project Folder...") }
	decomposeContext(context)
	chooseAction(currentDocument, currentSelection, runSelectProjectFolderIdentifier)
}

var onRemoveProjectFolderRun = function(context) {
	if (showLog) { log("Running Remove Project Folder...") }
	decomposeContext(context)
	chooseAction(currentDocument, currentSelection, runRemoveProjectFolderIdentifier)
}

var onShowProjectFolderRun = function(context) {
	if (showLog) { log("Running Show Project Folder...") }
	decomposeContext(context)
	chooseAction(currentDocument, currentSelection, runShowProjectFolderIdentifier)
}

var onCheckUpdatesRun = function(context) {
		if (showLog) { log("Running Updates Checker") }
		decomposeContext(context)
		chooseAction(currentDocument, currentSelection, runCheckUpdatesIdentifier)
}



var onTestingRun = function(context) {
	if (showLog) { log("Running Testing Environment") }
	isTestingEnvironment = true
	sendLog = false
	decomposeContext(context)
	chooseAction(currentDocument, currentSelection, runTestingEnvironmentIdentifier)
}
