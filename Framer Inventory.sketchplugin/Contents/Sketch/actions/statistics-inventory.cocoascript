@import 'inventory/libs/pluginDefaults.js'
// @import 'actions/demo-inventory.cocoascript'

var analyticsLink = "https://www.google-analytics.com/collect?v=1&t=event&tid=UA-58418174-3"

var simulateRequest = ["actions", "action_run", "simulate_keynote", "1"]
var generateRequest = ["actions", "action_run", "generate_states", "1"]
var replicateRequest = ["actions", "action_run", "replicate_layers", "1"]

StatisticsInventory.getSupportLink = function() { return "https://twitter.com/tilllur" }
StatisticsInventory.getDonateLink = function() { return "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=E9XQYGEE5X4U2" }
StatisticsInventory.buyLicenseLink = function() { return "https://bit.ly/deep-framer-inventory" }
StatisticsInventory.getUpdateDetailsLink = function() { return "https://bit.ly/deep-framer-inventory" }
StatisticsInventory.getLearnLink = function() { return "https://bit.ly/deep-framer-inventory" }


function StatisticsInventory () {}


StatisticsInventory.setStatus = function(status) {
    statsDefauls.currentStatus = status
    statsDefauls.actionSummary++
    saveDefaults(Status.statsDomain(), statsDefauls)

    if (status == Status.replicateID()) { StatisticsInventory.sendReplicateRequest() }
    else if (status == Status.generateID()) { StatisticsInventory.sendGenerateRequest() }
    else if (status == Status.simulateID()) { StatisticsInventory.sendSimulateRequest() }
}

StatisticsInventory.getStatus = function() {
    return statsDefauls.currentStatus
}



StatisticsInventory.setToolbar = function(toolbarOpened) {
   if (toolbarOpened) { statsDefauls.toolbar = 1 }
   else { statsDefauls.toolbar = 0 }
   saveDefaults(Status.statsDomain(), statsDefauls)
}

StatisticsInventory.getToolbar = function() {
  if (statsDefauls.toolbar == 1) { return true }
  return false
}

StatisticsInventory.startTesting = function() {
    var username = NSUserName()
    if([username isEqualToString:"tilllur"]) { statsDefauls.testing = 1 }
    saveDefaults(Status.statsDomain(), statsDefauls)
}

StatisticsInventory.stopTesting = function() {
    statsDefauls.testing = 0
    saveDefaults(Status.statsDomain(), statsDefauls)
}

StatisticsInventory.isTesting = function() {
  if (statsDefauls.testing == 1) { return true }
  return false
}













StatisticsInventory.sendSimulateRequest = function() {
    StatisticsInventory.sendRequest(StatisticsInventory.returnRequestURL(simulateRequest))
}

StatisticsInventory.sendGenerateRequest = function() {
    StatisticsInventory.sendRequest(StatisticsInventory.returnRequestURL(generateRequest))
}

StatisticsInventory.sendReplicateRequest = function() {
    StatisticsInventory.sendRequest(StatisticsInventory.returnRequestURL(replicateRequest))
}




StatisticsInventory.returnRequestURL = function(request) {
    if (request == nil || request.length != 4) { return "" }
    return analyticsLink + "&cid=" + userDefaults.myUserID + "&ec=" + request[0] + "&ea=" + request[1] + "&el=" + request[2] + "&ev=" + request[3]
}

StatisticsInventory.sendRequest = function(urlString) {
  if (urlString == nil || urlString == "") { return }

  var url = [NSURL URLWithString:urlString]
  var analyticsTask = [[NSURLSession sharedSession] downloadTaskWithURL:url completionHandler:nil];
  [analyticsTask resume];
}
