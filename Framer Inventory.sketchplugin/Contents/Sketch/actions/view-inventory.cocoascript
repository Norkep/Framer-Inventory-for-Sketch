
function ViewInventory () {}

ViewInventory.colorBlack = function() { return [NSColor colorWithRed:0.0 green:0.0 blue:0.0 alpha:1] }
ViewInventory.colorWhite = function() { return [NSColor colorWithRed:1.0 green:1.0 blue:1.0 alpha:1] }
ViewInventory.colorVersion = function() { return [NSColor colorWithRed:0.0 green:0.0 blue:0.0 alpha:0.5] }
ViewInventory.colorBackground = function() { return [NSColor colorWithRed:0.15 green:0.15 blue:0.15 alpha:1] }

ViewInventory.fontCheckControls = function() { return [NSFont systemFontOfSize:12 weight:NSFontWeightRegular] }
ViewInventory.fontInputControls = function() { return [NSFont systemFontOfSize:12 weight:NSFontWeightMedium] }
ViewInventory.fontAccessory = function() { return [NSFont systemFontOfSize:10 weight:NSFontWeightBold] }


ViewInventory.getImage = function(size, name) {
    var isRetinaDisplay = (NSScreen.mainScreen().backingScaleFactor() > 1)? true: false;
    var suffix = (isRetinaDisplay)? "@2x": "";
    var imageURL = NSURL.fileURLWithPath(pluginPath + "/images/" + name + suffix + ".png");
    var image = NSImage.alloc().initWithContentsOfURL(imageURL);
    return image
}

ViewInventory.addButton = function(rect, name, callAction) {
    var button = NSButton.alloc().initWithFrame(rect);
    var image = ViewInventory.getImage(rect.size, name);

    button.setImage(image);
    button.setBordered(false);
    button.sizeToFit();
    button.setButtonType(NSMomentaryChangeButton);
    button.setCOSJSTargetFunction(callAction);
    button.setAction("callAction:");
    return button;
}

ViewInventory.addImage = function(rect, name) {
    var view = NSImageView.alloc().initWithFrame(rect)
    var image = ViewInventory.getImage(rect.size, name);
    view.setImage(image);
    return view;
}



// Devices Magic
ViewInventory.returnDevices = function() {
    return [["Canvas", "Canvas @2x"], ["iPhone 5S", "iPhone 7", "iPhone 7 Plus"], ["Nexus 5P", "Nexus 6X"]]
}

ViewInventory.selectedDeviceIndex = function(selectedItemIndex) {
    if (selectedItemIndex == 0 || selectedItemIndex == 1) { return selectedItemIndex }
    else if (selectedItemIndex == 3 || selectedItemIndex == 4 || selectedItemIndex == 5) { return (selectedItemIndex - 1) }
    else if (selectedItemIndex == 7 || selectedItemIndex == 8) { return (selectedItemIndex - 2) }
    return 0
}

ViewInventory.deviceToSelect = function(index) {
    if (index == 0 || index == 1) { return index }
    else if (index == 2 || index == 3 || index == 4) { return (index + 1) }
    else if (index == 5 || index == 6) { return (index + 2) }
    return 0
}
