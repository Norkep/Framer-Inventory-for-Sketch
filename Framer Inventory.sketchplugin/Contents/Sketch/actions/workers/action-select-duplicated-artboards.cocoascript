var measureArtboardsPaddingLeft = 16
var measureArtboardsWindowHeight = 252;
var measureArtboardsWindowWidth = 240;

var smallFontSize = 13
var bigFontSize = 18

var whiteColor = [NSColor colorWithRed:1.0 green:1.0 blue:1.0 alpha:1]
var blackColor = [NSColor colorWithRed:0.0 green:0.0 blue:0.0 alpha:1]
var lightColor = [NSColor colorWithRed:0.6 green:0.6 blue:0.6 alpha:1]
var fieldColor = [NSColor colorWithSRGBRed:0.97 green:0.97 blue:0.97 alpha:1]
var backgroundColor = [NSColor colorWithRed:0.15 green:0.15 blue:0.15 alpha:1]





// configure plugin
var selectDuplicatedArtboards = function(artboardName) {

	var artboardsWindow = [[NSWindow alloc] init]
	artboardsWindow.setStyleMask(NSTitledWindowMask + NSFullSizeContentViewWindowMask);
	artboardsWindow.setTitlebarAppearsTransparent(true);
	artboardsWindow.setTitleVisibility(NSWindowTitleHidden);
	artboardsWindow.setTitlebarAppearsTransparent(true);
	artboardsWindow.setMovableByWindowBackground(true);
	[artboardsWindow setFrame:NSMakeRect(0, 0, measureArtboardsWindowWidth, measureArtboardsWindowHeight) display:false];
	[artboardsWindow setBackgroundColor:NSColor.colorWithRed_green_blue_alpha(0.84, 0.84, 0.84, 1)];

	var imageView = ToolbarInventory.addImage(NSMakeRect(0, 0, measureArtboardsWindowWidth, measureArtboardsWindowHeight), "messages/artboards");
	[[artboardsWindow contentView] addSubview:imageView];

	var showDuplicatesButton = [[NSButton alloc] initWithFrame:NSMakeRect(measureArtboardsPaddingLeft, 32, measureArtboardsWindowWidth - measureArtboardsPaddingLeft*2, 32)];
	[showDuplicatesButton setTitle:"Show Duplicated Artboards"];
	[showDuplicatesButton setBezelStyle:NSRoundedBezelStyle];
	[showDuplicatesButton setFont:[NSFont systemFontOfSize:13 weight:NSFontWeightMedium]];
	[showDuplicatesButton setKeyEquivalent:"\r"];
	[showDuplicatesButton setCOSJSTargetFunction:function(sender) {
		[artboardsWindow orderOut:nil]
		[NSApp stopModal]

		selectArtboardsWithName(artboardName)
	}];
	[showDuplicatesButton setAction:"callAction:"];
	[[artboardsWindow contentView] addSubview:showDuplicatesButton];


	var cancelButton = [[NSButton alloc] initWithFrame:NSMakeRect(measureArtboardsPaddingLeft, 6, measureArtboardsWindowWidth - measureArtboardsPaddingLeft*2, 32)];
	[cancelButton setTitle:"Cancel"];
	[cancelButton setFont:[NSFont systemFontOfSize:13 weight:NSFontWeightMedium]];
	[cancelButton setBezelStyle:NSRoundedBezelStyle];
	[cancelButton setKeyEquivalent:"\033"]
	[cancelButton setCOSJSTargetFunction:function(sender) {
		[artboardsWindow orderOut:nil]
		[NSApp stopModal]
	}];
	[cancelButton setAction:"callAction:"]
	[[artboardsWindow contentView] addSubview:cancelButton];


	[NSApp runModalForWindow:artboardsWindow];
}




var selectArtboardsWithName = function(artboardName) {
	var currentPage = FramerInventory.getCurrentPage()
	[currentPage deselectAllLayers]

	var artboards = [currentPage artboards]
	for (var i = 0; i < artboards.count(); i++) {
		var currentArtboard = [artboards objectAtIndex: i]
		if ([currentArtboard name] == artboardName) {
			[currentArtboard select:true byExpandingSelection:true]
		}
	}

	[currentDocument showMessage:"Rename artboards and try again"]
}
