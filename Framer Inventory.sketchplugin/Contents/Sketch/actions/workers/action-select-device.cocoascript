var configureRetinaEnabled = nil
var configureRetinaValue = nil
var configureRetinaString = nil
var configureMobile = nil
var configureMinimalExport = nil
var configureAutoplay = nil



var block = 40
var paddingLeft = 30
var columnWidth = 275-30*2

var smallFontSize = 13

var lightColor = [NSColor colorWithRed:0.6 green:0.6 blue:0.6 alpha:1];
var fieldColor = [NSColor colorWithSRGBRed:0.97 green:0.97 blue:0.97 alpha:1]
var backgroundColor = [NSColor colorWithRed:0.15 green:0.15 blue:0.15 alpha:1]

var retinaValues = [0.5, 1, 1.5, 2, 3, 4]




// configure plugin
var runSelectDevice = function() {
	initConfigureValues()

	var deviceWindow = [[NSWindow alloc] init]
	[deviceWindow setFrame:NSMakeRect(0, 0, 275, 200) display:false];
	[deviceWindow setBackgroundColor:backgroundColor];






	var saveButton = [[NSButton alloc] initWithFrame:NSMakeRect(paddingLeft - 6, 0, 64, 50)];
	[saveButton setTitle:"Save"];
	[saveButton setBezelStyle:NSRoundedBezelStyle];
	[saveButton setKeyEquivalent:"\r"];
	[saveButton setCOSJSTargetFunction:function(sender) {
		[deviceWindow orderOut:nil]
		[NSApp stopModal]

		// configureRetinaEnabled = dimensionsType.indexOfSelectedItem()
		// configureRetinaValue = retinaValues[retinaValueField.indexOfSelectedItem()]
		// configureRetinaString = retinaStringField.stringValue()
		// saveSettings()
	}];
	[saveButton setAction:"callAction:"];
	[[deviceWindow contentView] addSubview:saveButton];


	var cancelButton = [[NSButton alloc] initWithFrame:NSMakeRect(paddingLeft + 78 - 22, 0, 72, 50)];
	[cancelButton setTitle:"Cancel"];
	[cancelButton setBezelStyle:NSRoundedBezelStyle];
	[cancelButton setKeyEquivalent:"\033"]
	[cancelButton setCOSJSTargetFunction:function(sender) {
		[deviceWindow orderOut:nil]
		[NSApp stopModal]
	}];
	[cancelButton setAction:"callAction:"]
	[[deviceWindow contentView] addSubview:cancelButton];

	// if (configureRetinaEnabled == 0) { deviceWindow.makeFirstResponder(retinaValueField) }
	// else { deviceWindow.makeFirstResponder(retinaStringField) }

	[NSApp runModalForWindow:deviceWindow];
}
