@import 'actions/view-inventory.cocoascript'


var showEnterLicense = function(artboardName) {

	var artboardsWindow = [[NSWindow alloc] init]
	artboardsWindow.setStyleMask(NSTitledWindowMask + NSFullSizeContentViewWindowMask);
	artboardsWindow.setTitlebarAppearsTransparent(true);
	artboardsWindow.setBackgroundColor(ViewInventory.colorWindow())
	artboardsWindow.setTitleVisibility(NSWindowTitleHidden);
	artboardsWindow.setTitlebarAppearsTransparent(true);
	artboardsWindow.setMovableByWindowBackground(true);
	[artboardsWindow setFrame:NSMakeRect(0, 0, ViewInventory.sizeModalLicense(), 366) display:false];


	var imageView = ViewInventory.addImage(NSMakeRect(50, 229, 168, 116), "modals/register license");
	[[artboardsWindow contentView] addSubview:imageView];


	var emailInput = [[NSTextField alloc] initWithFrame:NSMakeRect(16, 154-16, ViewInventory.sizeModalLicense()-32, 20)];
  [[emailInput cell] setPlaceholderString:"Email"];
	[emailInput setFocusRingType:NSFocusRingTypeNone];
	[emailInput becomeFirstResponder];
  [emailInput setBordered:false];
  // [retinaInput setBackgroundColor:fieldColor];
	[emailInput setFont:ViewInventory.fontInputControls()];
	[[artboardsWindow contentView] addSubview:emailInput];

	var licenseInput = [[NSTextField alloc] initWithFrame:NSMakeRect(16, 120-16, ViewInventory.sizeModalLicense()-32, 20)];
  [[licenseInput cell] setPlaceholderString:"License"];
	[licenseInput setFocusRingType:NSFocusRingTypeNone];
	[licenseInput becomeFirstResponder];
  [licenseInput setBordered:false];
  // [retinaInput setBackgroundColor:fieldColor];
	[licenseInput setFont:ViewInventory.fontInputControls()];
	[[artboardsWindow contentView] addSubview:licenseInput];



	var getLicenseButton = ViewInventory.addButton( NSMakeRect(90, 192, 88, 24), "modals/get license link",
			function(sender){
				var url = [NSURL URLWithString:StatisticsInventory.buyLicenseLink()];
				[[NSWorkspace sharedWorkspace] openURL:url]
	})

	[[artboardsWindow contentView] addSubview:getLicenseButton];



	var registerButton = [[NSButton alloc] initWithFrame:NSMakeRect(12, 34, ViewInventory.sizeModalLicense() - 24, 32)];
	[registerButton setTitle:"Register License"];
	[registerButton setBezelStyle:NSRoundedBezelStyle];
	[registerButton setFont:ViewInventory.fontActionButton()];
	[registerButton setKeyEquivalent:"\r"];
	[registerButton setCOSJSTargetFunction:function(sender) {

		var emailValue = emailInput.stringValue() + ""
		var licenseValue = licenseInput.stringValue() + ""
		var licenseChecker = FILicenseChecker.alloc().init();

		if (licenseChecker.isRegisteredWithEmail_andLicense(emailValue, licenseValue)) {
			userDefaults.myEmail = emailValue
			userDefaults.myLicense = licenseValue
			saveDefaults(Status.userDomain(), userDefaults)

			[artboardsWindow orderOut:nil]
			[NSApp stopModal]

			[currentDocument showMessage:ViewInventory.registerActionMessageDone()]
		}
		else {
			log("inside click")
			[currentDocument showMessage:ViewInventory.registerActionMessageWrong()]
		}

	}];
	[registerButton setAction:"callAction:"];
	[[artboardsWindow contentView] addSubview:registerButton];



	var cancelButton = [[NSButton alloc] initWithFrame:NSMakeRect(12, 8, ViewInventory.sizeModalLicense() - 24, 32)];
	[cancelButton setTitle:"Close"];
	[cancelButton setFont:ViewInventory.fontActionButton()];
	[cancelButton setBezelStyle:NSRoundedBezelStyle];
	[cancelButton setKeyEquivalent:"\033"]
	[cancelButton setCOSJSTargetFunction:function(sender) {
		[artboardsWindow orderOut:nil]
		[NSApp stopModal]

	}];
	[cancelButton setAction:"callAction:"]
	[[artboardsWindow contentView] addSubview:cancelButton];


	[NSApp runModalForWindow:artboardsWindow];
}
