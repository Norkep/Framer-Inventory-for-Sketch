@import 'inventory/getters/exportable.cocoascript'

@import 'inventory/getters/get-place.cocoascript'
@import 'inventory/getters/get-opacity.cocoascript'
@import 'inventory/getters/get-shadows.cocoascript'
@import 'inventory/getters/get-borders.cocoascript'
@import 'inventory/getters/get-corners.cocoascript'
@import 'inventory/getters/get-background-color.cocoascript'


function LayerCompilation (layerName) {
	this.name = layerName;
	this.axisMode = 0

	this.matrix = []
}

LayerCompilation.prototype.getName = function() {
    return this.name;
}

LayerCompilation.prototype.addState = function(layer) {
	// 4 items
	var positionVariables = getPosition(layer)
	var opacityVariable = getOpacity(layer)
	var rotationVariable = (-[layer rotation])
	// 5 items
	var shadowVariables = getShadows(layer)
	
	if (isExportableWithoutImage(layer)) {
		// 2 items
		var bordersVariables = getBorders(layer)
		var cornersVariable = getCorners(layer)
		var backgroundColorVariable = getBackgroundColor(layer)
	}
	
	
	
	var params = positionVariables.concat(opacityVariable)
	params = params.concat(rotationVariable)
	params = params.concat(shadowVariables)
	
	if (isExportableWithoutImage(layer)) {
		params = params.concat(bordersVariables)
		params = params.concat(cornersVariable)
		params = params.concat(backgroundColorVariable)
	}
	
	
	this.matrix.push(params)
}


LayerCompilation.prototype.getStates = function() {

	for (var i = 0; i < this.matrix.length; i++) {
		
		var tempString = ""
		var prefix = ""
		for (var s = 0; s < this.matrix[i].length; s++) {
			if (s == 0) { prefix = "w:" }
			else if (s == 1) { prefix = "h:" }
			else if (s == 2) { prefix = "x:" }
			else if (s == 3) { prefix = "y:" }
			else if (s == 4) { prefix = "op:" }
			else if (s == 5) { prefix = "ro:" }
			else if (s == 6) { prefix = "sh(X):" }
			else if (s == 7) { prefix = "sh(Y):" }
			else if (s == 8) { prefix = "sh(Bl):" }
			else if (s == 9) { prefix = "sh(Sp):" }
			else if (s == 10) { prefix = "sh(#):" }
			else if (s == 11) { prefix = "bo(th):" }
			else if (s == 12) { prefix = "bo(#):" }
			else if (s == 13) { prefix = "cor:" }
			else if (s == 14) { prefix = "###:" }
			else { prefix = "" }
			tempString += prefix + this.matrix[i][s]) + "  "
		}
		log(tempString)
	}
}