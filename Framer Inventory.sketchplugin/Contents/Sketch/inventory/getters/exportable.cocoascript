

// types:
// -1 - unsupported
// 1  - group, image, shape
// 2  - rectangle 
// 3  - oval
// 4  - text layer

function exportableType(layerToAnalyse) {
	if ([layerToAnalyse className] == "MSSliceLayer") { return -1 }
	var magicLayers = layerToAnalyse.layers()
	if (magicLayers.count() > 1) { return 1 }
	
	var shape = magicLayers.firstObject()
	if(shape && (shape.isKindOfClass(MSRectangleShape) || shape.isKindOfClass(MSOvalShape))) {
		if ([[[shape path] points] count] != 4) { return 1 }
		return 2
	}
	else if(shape && shape.isKindOfClass(MSOvalShape))) {
		if ([[[shape path] points] count] != 4) { return 1 }
		return 3
	}
	return 1
}


function propertiesForType(typeNumber) {
	if (typeNumber == 0) { return 0 }
	else if (typeNumber == 1) { return 6 }
	else if (typeNumber == 2) { return 14 }
	else if (typeNumber == 3) { return 14 }
	else if (typeNumber == 4) { return 0 }
}




// COLORS

var localBlackColor = function() {
	return "#000000"
}

var convertHex = function(hex, opacity) {
    hex = hex.replace('#','');
    r = parseInt(hex.substring(0,2), 16);
    g = parseInt(hex.substring(2,4), 16);
    b = parseInt(hex.substring(4,6), 16);

    result = 'rgba('+r+','+g+','+b+','+opacity+')';
    return result;
}








// relative to Parent/Artboard

function findParent(layer, localAxis) {
	if (localAxis == 0) { return findParentArtboard(layer) }
	return findParentGroup(layer)
}

function findParentArtboard(layer) {
	var lookingForParentArtboard = true
	var localParent = layer
	while (lookingForParentArtboard) {
		localParent = [localParent parentGroup]
		if ([localParent className] == "MSArtboardGroup") {
			lookingForParentArtboard = false
		}
		else if ([localParent className] == "MSPage") {
			lookingForParentArtboard = false
		}
	}
	return localParent
}

function findParentGroup(layer) {
	return [layer parentGroup]
}