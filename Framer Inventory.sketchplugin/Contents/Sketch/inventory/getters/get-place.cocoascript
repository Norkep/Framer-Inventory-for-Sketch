// types:
// -1 - unsupported
// 1  - group, image, shape
// 2  - rectangle 
// 3  - oval
// 4  - text layer



// returns width, height, x, y
function getPosition(layer, type) {
	var localType = 0
	
	if (type == nil) { localType = exportableType(layer) }
	else {
		localType = type
	}
	
	if (localType == 1) {
		return getPlaceImage(layer)
	}
	else if (localType == 2 || localType == 3) {
		return getPlaceRect(layer)
	}
	else if (localType == 5) {
		return getPlaceRect(layer)
	}
	else {
		log("ERROR: Unsupported type for position")
		return nil
	}
}







var getPlaceImage = function(layer) {
	
	var parentArtboard = findParentArtboard(layer)
	var currentPage = findParentPage(layer)

	// copy layer and place it to artboard
	var layer_copy = [layer duplicate]
	[layer_copy removeFromParent]
	[currentPage addLayers: [layer_copy]]
	
	
	// normalize layer for export
	[layer_copy setRotation: 0]
	if ([[[layer_copy style] contextSettings] opacity] == 0) {
		[[[layer_copy style] contextSettings] setOpacity:(1.0)]
	}
	if (![layer_copy isVisible]) { [layer_copy setIsVisible:true] }
		
		
	var values = []
	var temp = [MSSliceTrimming trimmedRectForSlice:layer_copy];
	values = [temp.size.width, temp.size.height, temp.origin.x, temp.origin.y]
	
	[layer_copy removeFromParent]	
	return values
}



var getPlaceRect = function(layer) {
	
	var parentArtboard = findParentArtboard(layer)

	var layer_copy = [layer duplicate]
	[layer_copy setRotation: 0]
	
	var copied_x = getX(layer_copy, parentArtboard)
	var copied_y = getY(layer_copy, parentArtboard)
	
	var values = [getWidth(layer), getHeight(layer), copied_x, copied_y]
	
	[layer_copy removeFromParent]
	
	return values
}






// support

var getY = function(layer, parentLayer) {
	var parentY = [[parentLayer absoluteRect] y]
	var layerY = [[layer absoluteRect] y]
	return -(parentY - layerY)
}

var getX = function(layer, parentLayer) {
	var parentX = [[parentLayer absoluteRect] x]
	var layerX = [[layer absoluteRect] x]
	return -(parentX - layerX)
}

var getHeight = function(layer) {
	return [[layer frame] height]
}

var getWidth = function(layer) {
	return [[layer frame] width]
}




